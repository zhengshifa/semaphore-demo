# nginx-mng/tasks/main.yml
---
#- name: Include OS-specific variables
#  include_vars: "{{ ansible_os_family }}.yml"
#  tags: [always]

- name: Check current Nginx version
  shell: "{{ nginx_install_dir }}/sbin/nginx -v 2>&1"
  register: current_version_tmp
  changed_when: false
  ignore_errors: yes
  tags: [upgrade]

- name: Extract Nginx version from output
  set_fact:
    current_version: "{{ current_version_tmp.stdout | regex_search('nginx/([0-9.]+)') | regex_replace('nginx/', '') }}"
  when: current_version_tmp.rc == 0
  ignore_errors: yes
  tags: [upgrade]

- name: Install dependencies
  include_tasks: install_dependencies.yml
  tags: [install, dependencies]

- name: Compile and install Nginx
  include_tasks: compile_install.yml
  when: not (nginx_upgrade | default(false) | bool) and not (nginx_rollback | default(false) | bool) and current_version_tmp.rc != 0
  tags: [install]

- name: Setup Nginx configuration
  include_tasks: conf_setup.yml
  tags: [config]

- name: Handle version upgradeGenerate backup
  include_tasks: upgrade_nginx.yml
  when: >
    (nginx_upgrade | default(false) | bool) and
    not (nginx_rollback | default(false) | bool) and
    (current_version | default('0.0.0') is version_compare(nginx_version | default('0.0.0'), '<')) and current_version_tmp.rc == 0
  tags: [upgrade]

- name: Handle version rollback
  include_tasks: rollback_nginx.yml
  when: >
    (nginx_rollback | default(false) | bool) and 
    not (nginx_upgrade | default(false) | bool) and current_version_tmp.rc == 0
  tags: [rollback]